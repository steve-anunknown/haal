(set-option :auto-config false)
(set-option :model true)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_prj ((s LSet) (m Map)) Map ((_ map (ite (Bool Elt Elt) Elt)) s m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_to_set ((m Map)) LSet ((_ map (> (Elt Elt) Bool)) m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_max ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (> (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_min ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (< (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_shift ((n Int) (m Map)) Map (lambda ((i Int)) (select m (- i n))))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-datatypes ((PolySet.Lst 1)) ((par (T0) ((PolySet.Cons (PolySet.Cons$35$$35$lqdc$35$$35$$36$select$35$$35$PolySet.Cons$35$$35$1 T0) (PolySet.Cons$35$$35$lqdc$35$$35$$36$select$35$$35$PolySet.Cons$35$$35$2 (PolySet.Lst T0))) PolySet.Emp))))
(declare-fun p () (PolySet.Lst Int))
(declare-fun cast_as () Int)
(declare-fun PolySet.lstHd () Int)
(declare-fun VV$35$$35$4 () (PolySet.Lst (PolySet.Lst Int)))
(declare-fun cast_as_int () Int)
(declare-fun apply$35$$35$36 (Int (Array (PolySet.Lst Int) Bool)) (Array (PolySet.Lst Int) Bool))
(declare-fun apply$35$$35$57 (Int (PolySet.Lst (PolySet.Lst Int))) Bool)
(declare-fun apply$35$$35$5 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$31 (Int (Array Int Bool)) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun apply$35$$35$21 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$50 (Int (_ BitVec 64)) Str)
(declare-fun apply$35$$35$13 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$60 (Int (PolySet.Lst (PolySet.Lst Int))) (Array (PolySet.Lst Int) Bool))
(declare-fun apply$35$$35$44 (Int (_ BitVec 32)) (Array (PolySet.Lst Int) Bool))
(declare-fun apply$35$$35$39 (Int (Array (PolySet.Lst Int) Bool)) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun apply$35$$35$56 (Int (PolySet.Lst (PolySet.Lst Int))) Int)
(declare-fun apply$35$$35$10 (Int Bool) Str)
(declare-fun apply$35$$35$61 (Int (PolySet.Lst (PolySet.Lst Int))) (_ BitVec 32))
(declare-fun apply$35$$35$18 (Int Str) Str)
(declare-fun apply$35$$35$32 (Int (Array (PolySet.Lst Int) Bool)) Int)
(declare-fun apply$35$$35$27 (Int (Array Int Bool)) (Array Int Bool))
(declare-fun apply$35$$35$43 (Int (_ BitVec 32)) (Array Int Bool))
(declare-fun apply$35$$35$55 (Int (_ BitVec 64)) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$41 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$49 (Int (_ BitVec 64)) Bool)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$53 (Int (_ BitVec 64)) (_ BitVec 32))
(declare-fun apply$35$$35$17 (Int Str) Bool)
(declare-fun apply$35$$35$26 (Int (Array Int Bool)) Str)
(declare-fun apply$35$$35$14 (Int Bool) (_ BitVec 64))
(declare-fun apply$35$$35$6 (Int Int) (_ BitVec 64))
(declare-fun apply$35$$35$51 (Int (_ BitVec 64)) (Array Int Bool))
(declare-fun apply$35$$35$23 (Int Str) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun apply$35$$35$48 (Int (_ BitVec 64)) Int)
(declare-fun apply$35$$35$40 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$45 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$28 (Int (Array Int Bool)) (Array (PolySet.Lst Int) Bool))
(declare-fun apply$35$$35$30 (Int (Array Int Bool)) (_ BitVec 64))
(declare-fun apply$35$$35$58 (Int (PolySet.Lst (PolySet.Lst Int))) Str)
(declare-fun apply$35$$35$42 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$62 (Int (PolySet.Lst (PolySet.Lst Int))) (_ BitVec 64))
(declare-fun apply$35$$35$16 (Int Str) Int)
(declare-fun apply$35$$35$9 (Int Bool) Bool)
(declare-fun apply$35$$35$15 (Int Bool) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun apply$35$$35$59 (Int (PolySet.Lst (PolySet.Lst Int))) (Array Int Bool))
(declare-fun apply$35$$35$4 (Int Int) (Array (PolySet.Lst Int) Bool))
(declare-fun apply$35$$35$22 (Int Str) (_ BitVec 64))
(declare-fun apply$35$$35$19 (Int Str) (Array Int Bool))
(declare-fun apply$35$$35$20 (Int Str) (Array (PolySet.Lst Int) Bool))
(declare-fun apply$35$$35$24 (Int (Array Int Bool)) Int)
(declare-fun apply$35$$35$35 (Int (Array (PolySet.Lst Int) Bool)) (Array Int Bool))
(declare-fun apply$35$$35$52 (Int (_ BitVec 64)) (Array (PolySet.Lst Int) Bool))
(declare-fun apply$35$$35$8 (Int Bool) Int)
(declare-fun apply$35$$35$47 (Int (_ BitVec 32)) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun apply$35$$35$11 (Int Bool) (Array Int Bool))
(declare-fun apply$35$$35$63 (Int (PolySet.Lst (PolySet.Lst Int))) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun apply$35$$35$12 (Int Bool) (Array (PolySet.Lst Int) Bool))
(declare-fun apply$35$$35$33 (Int (Array (PolySet.Lst Int) Bool)) Bool)
(declare-fun apply$35$$35$3 (Int Int) (Array Int Bool))
(declare-fun apply$35$$35$7 (Int Int) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun apply$35$$35$46 (Int (_ BitVec 32)) (_ BitVec 64))
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$29 (Int (Array Int Bool)) (_ BitVec 32))
(declare-fun apply$35$$35$37 (Int (Array (PolySet.Lst Int) Bool)) (_ BitVec 32))
(declare-fun apply$35$$35$34 (Int (Array (PolySet.Lst Int) Bool)) Str)
(declare-fun apply$35$$35$38 (Int (Array (PolySet.Lst Int) Bool)) (_ BitVec 64))
(declare-fun apply$35$$35$54 (Int (_ BitVec 64)) (_ BitVec 64))
(declare-fun apply$35$$35$25 (Int (Array Int Bool)) Bool)
(declare-fun coerce$35$$35$36 ((Array (PolySet.Lst Int) Bool)) (Array (PolySet.Lst Int) Bool))
(declare-fun coerce$35$$35$57 ((PolySet.Lst (PolySet.Lst Int))) Bool)
(declare-fun coerce$35$$35$5 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$31 ((Array Int Bool)) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun coerce$35$$35$21 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$50 ((_ BitVec 64)) Str)
(declare-fun coerce$35$$35$13 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$60 ((PolySet.Lst (PolySet.Lst Int))) (Array (PolySet.Lst Int) Bool))
(declare-fun coerce$35$$35$44 ((_ BitVec 32)) (Array (PolySet.Lst Int) Bool))
(declare-fun coerce$35$$35$39 ((Array (PolySet.Lst Int) Bool)) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun coerce$35$$35$56 ((PolySet.Lst (PolySet.Lst Int))) Int)
(declare-fun coerce$35$$35$10 (Bool) Str)
(declare-fun coerce$35$$35$61 ((PolySet.Lst (PolySet.Lst Int))) (_ BitVec 32))
(declare-fun coerce$35$$35$18 (Str) Str)
(declare-fun coerce$35$$35$32 ((Array (PolySet.Lst Int) Bool)) Int)
(declare-fun coerce$35$$35$27 ((Array Int Bool)) (Array Int Bool))
(declare-fun coerce$35$$35$43 ((_ BitVec 32)) (Array Int Bool))
(declare-fun coerce$35$$35$55 ((_ BitVec 64)) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$41 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$49 ((_ BitVec 64)) Bool)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$53 ((_ BitVec 64)) (_ BitVec 32))
(declare-fun coerce$35$$35$17 (Str) Bool)
(declare-fun coerce$35$$35$26 ((Array Int Bool)) Str)
(declare-fun coerce$35$$35$14 (Bool) (_ BitVec 64))
(declare-fun coerce$35$$35$6 (Int) (_ BitVec 64))
(declare-fun coerce$35$$35$51 ((_ BitVec 64)) (Array Int Bool))
(declare-fun coerce$35$$35$23 (Str) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun coerce$35$$35$48 ((_ BitVec 64)) Int)
(declare-fun coerce$35$$35$40 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$45 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$28 ((Array Int Bool)) (Array (PolySet.Lst Int) Bool))
(declare-fun coerce$35$$35$30 ((Array Int Bool)) (_ BitVec 64))
(declare-fun coerce$35$$35$58 ((PolySet.Lst (PolySet.Lst Int))) Str)
(declare-fun coerce$35$$35$42 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$62 ((PolySet.Lst (PolySet.Lst Int))) (_ BitVec 64))
(declare-fun coerce$35$$35$16 (Str) Int)
(declare-fun coerce$35$$35$9 (Bool) Bool)
(declare-fun coerce$35$$35$15 (Bool) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun coerce$35$$35$59 ((PolySet.Lst (PolySet.Lst Int))) (Array Int Bool))
(declare-fun coerce$35$$35$4 (Int) (Array (PolySet.Lst Int) Bool))
(declare-fun coerce$35$$35$22 (Str) (_ BitVec 64))
(declare-fun coerce$35$$35$19 (Str) (Array Int Bool))
(declare-fun coerce$35$$35$20 (Str) (Array (PolySet.Lst Int) Bool))
(declare-fun coerce$35$$35$24 ((Array Int Bool)) Int)
(declare-fun coerce$35$$35$35 ((Array (PolySet.Lst Int) Bool)) (Array Int Bool))
(declare-fun coerce$35$$35$52 ((_ BitVec 64)) (Array (PolySet.Lst Int) Bool))
(declare-fun coerce$35$$35$8 (Bool) Int)
(declare-fun coerce$35$$35$47 ((_ BitVec 32)) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun coerce$35$$35$11 (Bool) (Array Int Bool))
(declare-fun coerce$35$$35$63 ((PolySet.Lst (PolySet.Lst Int))) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun coerce$35$$35$12 (Bool) (Array (PolySet.Lst Int) Bool))
(declare-fun coerce$35$$35$33 ((Array (PolySet.Lst Int) Bool)) Bool)
(declare-fun coerce$35$$35$3 (Int) (Array Int Bool))
(declare-fun coerce$35$$35$7 (Int) (PolySet.Lst (PolySet.Lst Int)))
(declare-fun coerce$35$$35$46 ((_ BitVec 32)) (_ BitVec 64))
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$29 ((Array Int Bool)) (_ BitVec 32))
(declare-fun coerce$35$$35$37 ((Array (PolySet.Lst Int) Bool)) (_ BitVec 32))
(declare-fun coerce$35$$35$34 ((Array (PolySet.Lst Int) Bool)) Str)
(declare-fun coerce$35$$35$38 ((Array (PolySet.Lst Int) Bool)) (_ BitVec 64))
(declare-fun coerce$35$$35$54 ((_ BitVec 64)) (_ BitVec 64))
(declare-fun coerce$35$$35$25 ((Array Int Bool)) Bool)
(declare-fun smt_lambda$35$$35$36 ((Array (PolySet.Lst Int) Bool) (Array (PolySet.Lst Int) Bool)) Int)
(declare-fun smt_lambda$35$$35$57 ((PolySet.Lst (PolySet.Lst Int)) Bool) Int)
(declare-fun smt_lambda$35$$35$5 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$31 ((Array Int Bool) (PolySet.Lst (PolySet.Lst Int))) Int)
(declare-fun smt_lambda$35$$35$21 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$50 ((_ BitVec 64) Str) Int)
(declare-fun smt_lambda$35$$35$13 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$60 ((PolySet.Lst (PolySet.Lst Int)) (Array (PolySet.Lst Int) Bool)) Int)
(declare-fun smt_lambda$35$$35$44 ((_ BitVec 32) (Array (PolySet.Lst Int) Bool)) Int)
(declare-fun smt_lambda$35$$35$39 ((Array (PolySet.Lst Int) Bool) (PolySet.Lst (PolySet.Lst Int))) Int)
(declare-fun smt_lambda$35$$35$56 ((PolySet.Lst (PolySet.Lst Int)) Int) Int)
(declare-fun smt_lambda$35$$35$10 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$61 ((PolySet.Lst (PolySet.Lst Int)) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$18 (Str Str) Int)
(declare-fun smt_lambda$35$$35$32 ((Array (PolySet.Lst Int) Bool) Int) Int)
(declare-fun smt_lambda$35$$35$27 ((Array Int Bool) (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$43 ((_ BitVec 32) (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$55 ((_ BitVec 64) (PolySet.Lst (PolySet.Lst Int))) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$41 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$49 ((_ BitVec 64) Bool) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$53 ((_ BitVec 64) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$17 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$26 ((Array Int Bool) Str) Int)
(declare-fun smt_lambda$35$$35$14 (Bool (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$6 (Int (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$51 ((_ BitVec 64) (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$23 (Str (PolySet.Lst (PolySet.Lst Int))) Int)
(declare-fun smt_lambda$35$$35$48 ((_ BitVec 64) Int) Int)
(declare-fun smt_lambda$35$$35$40 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$45 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$28 ((Array Int Bool) (Array (PolySet.Lst Int) Bool)) Int)
(declare-fun smt_lambda$35$$35$30 ((Array Int Bool) (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$58 ((PolySet.Lst (PolySet.Lst Int)) Str) Int)
(declare-fun smt_lambda$35$$35$42 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$62 ((PolySet.Lst (PolySet.Lst Int)) (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$16 (Str Int) Int)
(declare-fun smt_lambda$35$$35$9 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$15 (Bool (PolySet.Lst (PolySet.Lst Int))) Int)
(declare-fun smt_lambda$35$$35$59 ((PolySet.Lst (PolySet.Lst Int)) (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$4 (Int (Array (PolySet.Lst Int) Bool)) Int)
(declare-fun smt_lambda$35$$35$22 (Str (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$19 (Str (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$20 (Str (Array (PolySet.Lst Int) Bool)) Int)
(declare-fun smt_lambda$35$$35$24 ((Array Int Bool) Int) Int)
(declare-fun smt_lambda$35$$35$35 ((Array (PolySet.Lst Int) Bool) (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$52 ((_ BitVec 64) (Array (PolySet.Lst Int) Bool)) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$47 ((_ BitVec 32) (PolySet.Lst (PolySet.Lst Int))) Int)
(declare-fun smt_lambda$35$$35$11 (Bool (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$63 ((PolySet.Lst (PolySet.Lst Int)) (PolySet.Lst (PolySet.Lst Int))) Int)
(declare-fun smt_lambda$35$$35$12 (Bool (Array (PolySet.Lst Int) Bool)) Int)
(declare-fun smt_lambda$35$$35$33 ((Array (PolySet.Lst Int) Bool) Bool) Int)
(declare-fun smt_lambda$35$$35$3 (Int (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$7 (Int (PolySet.Lst (PolySet.Lst Int))) Int)
(declare-fun smt_lambda$35$$35$46 ((_ BitVec 32) (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$29 ((Array Int Bool) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$37 ((Array (PolySet.Lst Int) Bool) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$34 ((Array (PolySet.Lst Int) Bool) Str) Int)
(declare-fun smt_lambda$35$$35$38 ((Array (PolySet.Lst Int) Bool) (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$54 ((_ BitVec 64) (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$25 ((Array Int Bool) Bool) Int)
(declare-fun lam_arg$35$$35$1$35$$35$56 () (PolySet.Lst (PolySet.Lst Int)))
(declare-fun lam_arg$35$$35$2$35$$35$56 () (PolySet.Lst (PolySet.Lst Int)))
(declare-fun lam_arg$35$$35$3$35$$35$56 () (PolySet.Lst (PolySet.Lst Int)))
(declare-fun lam_arg$35$$35$4$35$$35$56 () (PolySet.Lst (PolySet.Lst Int)))
(declare-fun lam_arg$35$$35$5$35$$35$56 () (PolySet.Lst (PolySet.Lst Int)))
(declare-fun lam_arg$35$$35$6$35$$35$56 () (PolySet.Lst (PolySet.Lst Int)))
(declare-fun lam_arg$35$$35$7$35$$35$56 () (PolySet.Lst (PolySet.Lst Int)))
(declare-fun lam_arg$35$$35$1$35$$35$32 () (Array (PolySet.Lst Int) Bool))
(declare-fun lam_arg$35$$35$2$35$$35$32 () (Array (PolySet.Lst Int) Bool))
(declare-fun lam_arg$35$$35$3$35$$35$32 () (Array (PolySet.Lst Int) Bool))
(declare-fun lam_arg$35$$35$4$35$$35$32 () (Array (PolySet.Lst Int) Bool))
(declare-fun lam_arg$35$$35$5$35$$35$32 () (Array (PolySet.Lst Int) Bool))
(declare-fun lam_arg$35$$35$6$35$$35$32 () (Array (PolySet.Lst Int) Bool))
(declare-fun lam_arg$35$$35$7$35$$35$32 () (Array (PolySet.Lst Int) Bool))
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$48 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$2$35$$35$48 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$3$35$$35$48 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$4$35$$35$48 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$5$35$$35$48 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$6$35$$35$48 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$7$35$$35$48 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$1$35$$35$40 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$40 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$40 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$40 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$40 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$40 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$40 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$16 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$24 () (Array Int Bool))
(declare-fun lam_arg$35$$35$2$35$$35$24 () (Array Int Bool))
(declare-fun lam_arg$35$$35$3$35$$35$24 () (Array Int Bool))
(declare-fun lam_arg$35$$35$4$35$$35$24 () (Array Int Bool))
(declare-fun lam_arg$35$$35$5$35$$35$24 () (Array Int Bool))
(declare-fun lam_arg$35$$35$6$35$$35$24 () (Array Int Bool))
(declare-fun lam_arg$35$$35$7$35$$35$24 () (Array Int Bool))
(declare-fun lam_arg$35$$35$1$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Bool)
(push 1)
(define-fun b$36$$35$$35$4 () Bool (and (is-PolySet.Cons VV$35$$35$4) (not (is-PolySet.Emp VV$35$$35$4)) (= VV$35$$35$4 ((as PolySet.Cons (PolySet.Lst (PolySet.Lst Int))) p (as PolySet.Emp (PolySet.Lst (PolySet.Lst Int))))) (= (PolySet.Cons$35$$35$lqdc$35$$35$$36$select$35$$35$PolySet.Cons$35$$35$1 VV$35$$35$4) p) (= (PolySet.Cons$35$$35$lqdc$35$$35$$36$select$35$$35$PolySet.Cons$35$$35$2 VV$35$$35$4) (as PolySet.Emp (PolySet.Lst (PolySet.Lst Int)))) (= (apply$35$$35$60 (as PolySet.lstHd Int) VV$35$$35$4) (store ((as const (Array (PolySet.Lst Int) Bool)) false) p true))))
(push 1)
(push 1)
(assert (and true b$36$$35$$35$4))
(push 1)
(assert (not (= VV$35$$35$4 ((as PolySet.Cons (PolySet.Lst (PolySet.Lst Int))) p (as PolySet.Emp (PolySet.Lst (PolySet.Lst Int)))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(pop 1)
