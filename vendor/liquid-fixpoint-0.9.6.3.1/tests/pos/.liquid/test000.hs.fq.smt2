(set-option :auto-config false)
(set-option :model true)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_prj ((s LSet) (m Map)) Map ((_ map (ite (Bool Elt Elt) Elt)) s m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_to_set ((m Map)) LSet ((_ map (> (Elt Elt) Bool)) m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_max ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (> (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_min ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (< (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_shift ((n Int) (m Map)) Map (lambda ((i Int)) (select m (- i n))))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun x_Tuple77 () Int)
(declare-fun x_Tuple44 () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun GHC.Types.False$36$35$36$68 () Int)
(declare-fun VV$36$35$36$486 () Int)
(declare-fun lq_anf__d12v () Int)
(declare-fun x_Tuple55 () Int)
(declare-fun x_Tuple65 () Int)
(declare-fun VV$35$$35$8 () Int)
(declare-fun snd () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun x$36$35$36$a11A () Int)
(declare-fun lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__235 () Int)
(declare-fun len () Int)
(declare-fun lq_anf__d12q () Int)
(declare-fun lq_karg$36$VV$36$35$36$234$35$$35$k__235 () Int)
(declare-fun x_Tuple75 () Int)
(declare-fun fromJust () Int)
(declare-fun x_Tuple73 () Int)
(declare-fun cast_as () Int)
(declare-fun lq_anf__d12u () Int)
(declare-fun lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__273 () Int)
(declare-fun lq_karg$36$VV$36$35$36$307$35$$35$k__308 () Int)
(declare-fun GHC.Types.True$36$35$36$6u () Int)
(declare-fun x_Tuple43 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__235 () Int)
(declare-fun fst () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__235 () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__273 () Int)
(declare-fun papp2 () Int)
(declare-fun papp1 () Int)
(declare-fun xsListSelector () Int)
(declare-fun isJust () Int)
(declare-fun null () Int)
(declare-fun lq_anf__d12s () Int)
(declare-fun x_Tuple76 () Int)
(declare-fun papp4 () Int)
(declare-fun lq_anf__d12y () Int)
(declare-fun GHC.Types.GT$36$35$36$6W () Int)
(declare-fun VV$35$$35$13 () Int)
(declare-fun lq_karg$36$Test0.prop_abs$36$35$36$r10h$35$$35$k__308 () Int)
(declare-fun VV$36$35$36$492 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__308 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__308 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__308 () Int)
(declare-fun VV$35$$35$5 () Int)
(declare-fun VV$36$35$36$471 () Int)
(declare-fun lq_anf__d12t () Int)
(declare-fun Test0.prop_abs$36$35$36$r10h () Int)
(declare-fun runFun () Int)
(declare-fun x_Tuple52 () Int)
(declare-fun VV$35$$35$14 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__273 () Int)
(declare-fun GHC.Types.EQ$36$35$36$6U () Int)
(declare-fun x_Tuple54 () Int)
(declare-fun lq_anf__d12r () Int)
(declare-fun x_Tuple61 () Int)
(declare-fun x_Tuple71 () Int)
(declare-fun x_Tuple53 () Int)
(declare-fun xListSelector () Int)
(declare-fun x_Tuple42 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__273 () Int)
(declare-fun Prop () Int)
(declare-fun VV$35$$35$12 () Int)
(declare-fun papp3 () Int)
(declare-fun x_Tuple51 () Int)
(declare-fun lq_karg$36$VV$36$35$36$272$35$$35$k__273 () Int)
(declare-fun autolen () Int)
(declare-fun GHC.Types.LT$36$35$36$6S () Int)
(declare-fun x_Tuple62 () Int)
(declare-fun x_Tuple64 () Int)
(declare-fun x_Tuple66 () Int)
(declare-fun addrLen () Int)
(declare-fun VV$36$35$36$483 () Int)
(declare-fun x_Tuple41 () Int)
(declare-fun x_Tuple72 () Int)
(declare-fun GHC.Types.I$36$35$36$$36$35$36$6c () Int)
(declare-fun VV$36$35$36$450 () Int)
(declare-fun VV$36$35$36$489 () Int)
(declare-fun Test0.toss$36$35$36$rYP () Int)
(declare-fun x_Tuple74 () Int)
(declare-fun cmp () Int)
(declare-fun VV$35$$35$11 () Int)
(declare-fun VV$35$$35$15 () Int)
(declare-fun cast_as_int () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun x_Tuple63 () Int)
(declare-fun lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__308 () Int)
(declare-fun VV$36$35$36$495 () Int)
(declare-fun apply$35$$35$4 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$16 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$32 (Int (_ BitVec 64)) Str)
(declare-fun apply$35$$35$10 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$8 (Int Bool) Str)
(declare-fun apply$35$$35$14 (Int Str) Str)
(declare-fun apply$35$$35$21 (Int (Array Int Bool)) (Array Int Bool))
(declare-fun apply$35$$35$27 (Int (_ BitVec 32)) (Array Int Bool))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$25 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$31 (Int (_ BitVec 64)) Bool)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$34 (Int (_ BitVec 64)) (_ BitVec 32))
(declare-fun apply$35$$35$13 (Int Str) Bool)
(declare-fun apply$35$$35$20 (Int (Array Int Bool)) Str)
(declare-fun apply$35$$35$11 (Int Bool) (_ BitVec 64))
(declare-fun apply$35$$35$5 (Int Int) (_ BitVec 64))
(declare-fun apply$35$$35$33 (Int (_ BitVec 64)) (Array Int Bool))
(declare-fun apply$35$$35$30 (Int (_ BitVec 64)) Int)
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$28 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$23 (Int (Array Int Bool)) (_ BitVec 64))
(declare-fun apply$35$$35$26 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$12 (Int Str) Int)
(declare-fun apply$35$$35$7 (Int Bool) Bool)
(declare-fun apply$35$$35$17 (Int Str) (_ BitVec 64))
(declare-fun apply$35$$35$15 (Int Str) (Array Int Bool))
(declare-fun apply$35$$35$18 (Int (Array Int Bool)) Int)
(declare-fun apply$35$$35$6 (Int Bool) Int)
(declare-fun apply$35$$35$9 (Int Bool) (Array Int Bool))
(declare-fun apply$35$$35$3 (Int Int) (Array Int Bool))
(declare-fun apply$35$$35$29 (Int (_ BitVec 32)) (_ BitVec 64))
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$22 (Int (Array Int Bool)) (_ BitVec 32))
(declare-fun apply$35$$35$35 (Int (_ BitVec 64)) (_ BitVec 64))
(declare-fun apply$35$$35$19 (Int (Array Int Bool)) Bool)
(declare-fun coerce$35$$35$4 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$16 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$32 ((_ BitVec 64)) Str)
(declare-fun coerce$35$$35$10 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$8 (Bool) Str)
(declare-fun coerce$35$$35$14 (Str) Str)
(declare-fun coerce$35$$35$21 ((Array Int Bool)) (Array Int Bool))
(declare-fun coerce$35$$35$27 ((_ BitVec 32)) (Array Int Bool))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$25 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$31 ((_ BitVec 64)) Bool)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$34 ((_ BitVec 64)) (_ BitVec 32))
(declare-fun coerce$35$$35$13 (Str) Bool)
(declare-fun coerce$35$$35$20 ((Array Int Bool)) Str)
(declare-fun coerce$35$$35$11 (Bool) (_ BitVec 64))
(declare-fun coerce$35$$35$5 (Int) (_ BitVec 64))
(declare-fun coerce$35$$35$33 ((_ BitVec 64)) (Array Int Bool))
(declare-fun coerce$35$$35$30 ((_ BitVec 64)) Int)
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$28 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$23 ((Array Int Bool)) (_ BitVec 64))
(declare-fun coerce$35$$35$26 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$12 (Str) Int)
(declare-fun coerce$35$$35$7 (Bool) Bool)
(declare-fun coerce$35$$35$17 (Str) (_ BitVec 64))
(declare-fun coerce$35$$35$15 (Str) (Array Int Bool))
(declare-fun coerce$35$$35$18 ((Array Int Bool)) Int)
(declare-fun coerce$35$$35$6 (Bool) Int)
(declare-fun coerce$35$$35$9 (Bool) (Array Int Bool))
(declare-fun coerce$35$$35$3 (Int) (Array Int Bool))
(declare-fun coerce$35$$35$29 ((_ BitVec 32)) (_ BitVec 64))
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$22 ((Array Int Bool)) (_ BitVec 32))
(declare-fun coerce$35$$35$35 ((_ BitVec 64)) (_ BitVec 64))
(declare-fun coerce$35$$35$19 ((Array Int Bool)) Bool)
(declare-fun smt_lambda$35$$35$4 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$16 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$32 ((_ BitVec 64) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$14 (Str Str) Int)
(declare-fun smt_lambda$35$$35$21 ((Array Int Bool) (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$27 ((_ BitVec 32) (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$25 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$31 ((_ BitVec 64) Bool) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$34 ((_ BitVec 64) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$13 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$20 ((Array Int Bool) Str) Int)
(declare-fun smt_lambda$35$$35$11 (Bool (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$5 (Int (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$33 ((_ BitVec 64) (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$30 ((_ BitVec 64) Int) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$28 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$23 ((Array Int Bool) (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$26 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$12 (Str Int) Int)
(declare-fun smt_lambda$35$$35$7 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$17 (Str (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$15 (Str (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$18 ((Array Int Bool) Int) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$9 (Bool (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$3 (Int (Array Int Bool)) Int)
(declare-fun smt_lambda$35$$35$29 ((_ BitVec 32) (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$22 ((Array Int Bool) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$35 ((_ BitVec 64) (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$19 ((Array Int Bool) Bool) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$30 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$2$35$$35$30 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$3$35$$35$30 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$4$35$$35$30 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$5$35$$35$30 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$6$35$$35$30 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$7$35$$35$30 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$1$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$24 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$12 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$18 () (Array Int Bool))
(declare-fun lam_arg$35$$35$2$35$$35$18 () (Array Int Bool))
(declare-fun lam_arg$35$$35$3$35$$35$18 () (Array Int Bool))
(declare-fun lam_arg$35$$35$4$35$$35$18 () (Array Int Bool))
(declare-fun lam_arg$35$$35$5$35$$35$18 () (Array Int Bool))
(declare-fun lam_arg$35$$35$6$35$$35$18 () (Array Int Bool))
(declare-fun lam_arg$35$$35$7$35$$35$18 () (Array Int Bool))
(declare-fun lam_arg$35$$35$1$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$6 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$6 () Bool)
(push 1)
(define-fun b$36$$35$$35$32 () Bool (= lq_anf__d12u 0))
(define-fun b$36$$35$$35$33 () Bool (= (apply$35$$35$1 Prop lq_anf__d12v) (> x$36$35$36$a11A lq_anf__d12u)))
(define-fun b$36$$35$$35$4 () Bool (= GHC.Types.EQ$36$35$36$6U GHC.Types.EQ$36$35$36$6U))
(define-fun b$36$$35$$35$36 () Bool (= lq_anf__d12y 12))
(define-fun b$36$$35$$35$5 () Bool (= GHC.Types.LT$36$35$36$6S GHC.Types.LT$36$35$36$6S))
(define-fun b$36$$35$$35$6 () Bool (= GHC.Types.GT$36$35$36$6W GHC.Types.GT$36$35$36$6W))
(define-fun b$36$$35$$35$7 () Bool (apply$35$$35$1 Prop GHC.Types.True$36$35$36$6u))
(define-fun b$36$$35$$35$8 () Bool (not (apply$35$$35$1 Prop GHC.Types.False$36$35$36$68)))
(define-fun b$36$$35$$35$72 () Bool (= VV$36$35$36$471 lq_anf__d12v))
(define-fun b$36$$35$$35$9 () Bool (not (apply$35$$35$1 Prop GHC.Types.False$36$35$36$68)))
(define-fun b$36$$35$$35$11 () Bool (apply$35$$35$1 Prop GHC.Types.True$36$35$36$6u))
(define-fun b$36$$35$$35$12 () Bool (= (apply$35$$35$0 cmp GHC.Types.GT$36$35$36$6W) GHC.Types.GT$36$35$36$6W))
(define-fun b$36$$35$$35$13 () Bool (= (apply$35$$35$0 cmp GHC.Types.LT$36$35$36$6S) GHC.Types.LT$36$35$36$6S))
(define-fun b$36$$35$$35$14 () Bool (= (apply$35$$35$0 cmp GHC.Types.EQ$36$35$36$6U) GHC.Types.EQ$36$35$36$6U))
(define-fun b$36$$35$$35$111 () Bool (= VV$35$$35$5 lq_anf__d12y))
(define-fun b$36$$35$$35$80 () Bool (apply$35$$35$1 Prop VV$36$35$36$483))
(define-fun b$36$$35$$35$112 () Bool (= VV$35$$35$8 lq_anf__d12v))
(define-fun b$36$$35$$35$113 () Bool (apply$35$$35$1 Prop VV$35$$35$11))
(define-fun b$36$$35$$35$18 () Bool (= lq_anf__d12r 10))
(define-fun b$36$$35$$35$82 () Bool (= VV$36$35$36$486 lq_anf__d12t))
(define-fun b$36$$35$$35$114 () Bool (= VV$35$$35$12 lq_anf__d12t))
(define-fun b$36$$35$$35$115 () Bool (= VV$35$$35$13 GHC.Types.False$36$35$36$68))
(define-fun b$36$$35$$35$20 () Bool (= lq_anf__d12s Test0.toss$36$35$36$rYP))
(define-fun b$36$$35$$35$84 () Bool (= VV$36$35$36$489 GHC.Types.False$36$35$36$68))
(define-fun b$36$$35$$35$116 () Bool (= VV$35$$35$14 GHC.Types.False$36$35$36$68))
(define-fun b$36$$35$$35$117 () Bool (= (apply$35$$35$1 Prop VV$35$$35$15) (> lq_anf__d12q lq_anf__d12r)))
(define-fun b$36$$35$$35$22 () Bool (and (not (apply$35$$35$1 Prop lq_anf__d12s)) (= lq_anf__d12s Test0.toss$36$35$36$rYP)))
(define-fun b$36$$35$$35$86 () Bool (= VV$36$35$36$492 GHC.Types.False$36$35$36$68))
(define-fun b$36$$35$$35$23 () Bool (= lq_anf__d12s Test0.toss$36$35$36$rYP))
(define-fun b$36$$35$$35$24 () Bool (and (apply$35$$35$1 Prop lq_anf__d12s) (= lq_anf__d12s Test0.toss$36$35$36$rYP)))
(define-fun b$36$$35$$35$88 () Bool (= (apply$35$$35$1 Prop VV$36$35$36$495) (> lq_anf__d12q lq_anf__d12r)))
(define-fun b$36$$35$$35$25 () Bool (= lq_anf__d12t lq_anf__d12s))
(define-fun b$36$$35$$35$58 () Bool (= VV$36$35$36$450 lq_anf__d12y))
(define-fun b$36$$35$$35$27 () Bool (and (not (apply$35$$35$1 Prop lq_anf__d12t)) (= lq_anf__d12t lq_anf__d12s)))
(define-fun b$36$$35$$35$28 () Bool (= lq_anf__d12t lq_anf__d12s))
(define-fun b$36$$35$$35$29 () Bool (and (apply$35$$35$1 Prop lq_anf__d12t) (= lq_anf__d12t lq_anf__d12s)))
(push 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__235 Int) (lq_karg$36$VV$36$35$36$234$35$$35$k__235 Int) (VV$36$35$36$234 Int) (lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__235 Int) (lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__235 Int)) (and (= VV$36$35$36$234 Test0.toss$36$35$36$rYP) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__235 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__235 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__235 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$VV$36$35$36$234$35$$35$k__235 Test0.toss$36$35$36$rYP) (exists ((lq_anf__d12q Int) (lq_anf__d12r Int) (VV$35$$35$15 Int) (VV$36$35$36$495 Int)) (and (= lq_anf__d12r 10) (= (apply$35$$35$1 Prop VV$35$$35$15) (> lq_anf__d12q lq_anf__d12r)) (= (apply$35$$35$1 Prop VV$36$35$36$495) (> lq_anf__d12q lq_anf__d12r)) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__235 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__235 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__235 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$VV$36$35$36$234$35$$35$k__235 VV$35$$35$15))))) (or (exists ((VV$36$35$36$272 Int) (lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__273 Int) (lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__273 Int) (lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__273 Int) (lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__273 Int) (lq_karg$36$VV$36$35$36$272$35$$35$k__273 Int)) (and (= VV$36$35$36$272 Test0.prop_abs$36$35$36$r10h) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__273 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__273 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__273 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__273 Test0.toss$36$35$36$rYP) (= lq_karg$36$VV$36$35$36$272$35$$35$k__273 Test0.prop_abs$36$35$36$r10h) (exists ((VV$35$$35$14 Int) (lq_anf__d12s Int) (VV$36$35$36$492 Int)) (and (= VV$35$$35$14 GHC.Types.False$36$35$36$68) (not (apply$35$$35$1 Prop lq_anf__d12s)) (= lq_anf__d12s Test0.toss$36$35$36$rYP) (= VV$36$35$36$492 GHC.Types.False$36$35$36$68) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__273 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__273 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__273 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__273 Test0.toss$36$35$36$rYP) (= lq_karg$36$VV$36$35$36$272$35$$35$k__273 VV$35$$35$14))))) (exists ((VV$36$35$36$272 Int) (lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__273 Int) (lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__273 Int) (lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__273 Int) (lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__273 Int) (lq_karg$36$VV$36$35$36$272$35$$35$k__273 Int)) (and (= VV$36$35$36$272 Test0.prop_abs$36$35$36$r10h) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__273 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__273 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__273 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__273 Test0.toss$36$35$36$rYP) (= lq_karg$36$VV$36$35$36$272$35$$35$k__273 Test0.prop_abs$36$35$36$r10h) (exists ((VV$35$$35$13 Int) (lq_anf__d12s Int) (VV$36$35$36$489 Int) (lq_anf__d12s Int) (lq_anf__d12s Int) (lq_anf__d12t Int)) (and (= VV$35$$35$13 GHC.Types.False$36$35$36$68) (= lq_anf__d12s Test0.toss$36$35$36$rYP) (= VV$36$35$36$489 GHC.Types.False$36$35$36$68) (= lq_anf__d12s Test0.toss$36$35$36$rYP) (apply$35$$35$1 Prop lq_anf__d12s) (= lq_anf__d12s Test0.toss$36$35$36$rYP) (not (apply$35$$35$1 Prop lq_anf__d12t)) (= lq_anf__d12t lq_anf__d12s) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__273 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__273 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__273 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__273 Test0.toss$36$35$36$rYP) (= lq_karg$36$VV$36$35$36$272$35$$35$k__273 VV$35$$35$13))))) (exists ((VV$36$35$36$272 Int) (lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__273 Int) (lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__273 Int) (lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__273 Int) (lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__273 Int) (lq_karg$36$VV$36$35$36$272$35$$35$k__273 Int)) (and (= VV$36$35$36$272 Test0.prop_abs$36$35$36$r10h) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__273 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__273 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__273 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__273 Test0.toss$36$35$36$rYP) (= lq_karg$36$VV$36$35$36$272$35$$35$k__273 Test0.prop_abs$36$35$36$r10h) (exists ((VV$36$35$36$483 Int) (VV$35$$35$11 Int) (lq_anf__d12s Int) (lq_anf__d12s Int) (lq_anf__d12s Int) (lq_anf__d12t Int)) (and (apply$35$$35$1 Prop VV$36$35$36$483) (apply$35$$35$1 Prop VV$35$$35$11) (= lq_anf__d12s Test0.toss$36$35$36$rYP) (= lq_anf__d12s Test0.toss$36$35$36$rYP) (apply$35$$35$1 Prop lq_anf__d12s) (= lq_anf__d12s Test0.toss$36$35$36$rYP) (apply$35$$35$1 Prop lq_anf__d12t) (= lq_anf__d12t lq_anf__d12s) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__273 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__273 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__273 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__273 Test0.toss$36$35$36$rYP) (= lq_karg$36$VV$36$35$36$272$35$$35$k__273 VV$35$$35$11)))))) (exists ((lq_karg$36$VV$36$35$36$307$35$$35$k__308 Int) (VV$36$35$36$307 Int) (lq_karg$36$Test0.prop_abs$36$35$36$r10h$35$$35$k__308 Int) (lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__308 Int) (lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__308 Int) (lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__308 Int) (lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__308 Int)) (and (= VV$36$35$36$307 x$36$35$36$a11A) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__308 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__308 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__308 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$Test0.prop_abs$36$35$36$r10h$35$$35$k__308 Test0.prop_abs$36$35$36$r10h) (= lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__308 Test0.toss$36$35$36$rYP) (= lq_karg$36$VV$36$35$36$307$35$$35$k__308 x$36$35$36$a11A) (exists ((lq_anf__d12y Int) (VV$35$$35$5 Int) (VV$36$35$36$450 Int)) (and (= lq_anf__d12y 12) (= VV$35$$35$5 lq_anf__d12y) (= VV$36$35$36$450 lq_anf__d12y) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__308 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__308 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__308 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$Test0.prop_abs$36$35$36$r10h$35$$35$k__308 Test0.prop_abs$36$35$36$r10h) (= lq_karg$36$Test0.toss$36$35$36$rYP$35$$35$k__308 Test0.toss$36$35$36$rYP) (= lq_karg$36$VV$36$35$36$307$35$$35$k__308 VV$35$$35$5)))))) b$36$$35$$35$32 b$36$$35$$35$33 b$36$$35$$35$4 b$36$$35$$35$5 b$36$$35$$35$6 b$36$$35$$35$7 b$36$$35$$35$8 b$36$$35$$35$72 b$36$$35$$35$9 b$36$$35$$35$11 b$36$$35$$35$12 b$36$$35$$35$13 b$36$$35$$35$14 b$36$$35$$35$112))
(push 1)
(assert (not (apply$35$$35$1 Prop VV$35$$35$8)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__235 Int) (lq_karg$36$VV$36$35$36$234$35$$35$k__235 Int) (VV$36$35$36$234 Int) (lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__235 Int) (lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__235 Int)) (and (= VV$36$35$36$234 Test0.toss$36$35$36$rYP) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__235 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__235 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__235 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$VV$36$35$36$234$35$$35$k__235 Test0.toss$36$35$36$rYP) (exists ((lq_anf__d12q Int) (lq_anf__d12r Int) (VV$35$$35$15 Int) (VV$36$35$36$495 Int)) (and (= lq_anf__d12r 10) (= (apply$35$$35$1 Prop VV$35$$35$15) (> lq_anf__d12q lq_anf__d12r)) (= (apply$35$$35$1 Prop VV$36$35$36$495) (> lq_anf__d12q lq_anf__d12r)) (= lq_karg$36$GHC.Types.EQ$36$35$36$6U$35$$35$k__235 GHC.Types.EQ$36$35$36$6U) (= lq_karg$36$GHC.Types.GT$36$35$36$6W$35$$35$k__235 GHC.Types.GT$36$35$36$6W) (= lq_karg$36$GHC.Types.LT$36$35$36$6S$35$$35$k__235 GHC.Types.LT$36$35$36$6S) (= lq_karg$36$VV$36$35$36$234$35$$35$k__235 VV$35$$35$15))))) b$36$$35$$35$4 b$36$$35$$35$5 b$36$$35$$35$6 b$36$$35$$35$7 b$36$$35$$35$8 b$36$$35$$35$9 b$36$$35$$35$11 b$36$$35$$35$12 b$36$$35$$35$13 b$36$$35$$35$14 b$36$$35$$35$82 b$36$$35$$35$114 b$36$$35$$35$20 b$36$$35$$35$23 b$36$$35$$35$24 b$36$$35$$35$25 b$36$$35$$35$28 b$36$$35$$35$29))
(push 1)
(assert (not (apply$35$$35$1 Prop VV$35$$35$12)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(pop 1)
